from django.db import models

class Collision(models.Model):
    case_id = models.TextField(null=True)
    jurisdiction = models.IntegerField(null=True)
    officer_id = models.TextField(null=True)
    reporting_district = models.TextField(null=True)
    chp_shift = models.TextField(null=True)
    population = models.TextField(null=True)
    county_city_location = models.TextField(null=True)
    county_location = models.TextField(null=True)
    special_condition = models.TextField(null=True)
    beat_type = models.TextField(null=True)
    chp_beat_type = models.TextField(null=True)
    city_division_lapd = models.TextField(null=True)
    chp_beat_class = models.TextField(null=True)
    beat_number = models.TextField(null=True)
    primary_road = models.TextField(null=True)
    secondary_road = models.TextField(null=True)
    distance = models.FloatField(null=True)
    direction = models.TextField(null=True)
    intersection = models.IntegerField(null=True)
    weather_1 = models.TextField(null=True)
    weather_2 = models.TextField(null=True)
    state_highway_indicator = models.IntegerField(null=True)
    caltrans_county = models.TextField(null=True)
    caltrans_district = models.IntegerField(null=True)
    state_route = models.IntegerField(null=True)
    route_suffix = models.TextField(null=True)
    postmile_prefix = models.TextField(null=True)
    postmile = models.FloatField(null=True)
    location_type = models.TextField(null=True)
    ramp_intersection = models.TextField(null=True)
    side_of_highway = models.TextField(null=True)
    tow_away = models.IntegerField(null=True)
    collision_severity = models.TextField(null=True)
    killed_victims = models.IntegerField(null=True)
    injured_victims = models.IntegerField(null=True)
    party_count = models.IntegerField(null=True)
    primary_collision_factor = models.TextField(null=True)
    pcf_violation_code = models.TextField(null=True)
    pcf_violation_category = models.TextField(null=True)
    pcf_violation = models.IntegerField(null=True)
    pcf_violation_subsection = models.TextField(null=True)
    hit_and_run = models.TextField(null=True)
    type_of_collision = models.TextField(null=True)
    motor_vehicle_involved_with = models.TextField(null=True)
    pedestrian_action = models.TextField(null=True)
    road_surface = models.TextField(null=True)
    road_condition_1 = models.TextField(null=True)
    road_condition_2 = models.TextField(null=True)
    lighting = models.TextField(null=True)
    control_device = models.TextField(null=True)
    chp_road_type = models.TextField(null=True)
    pedestrian_collision = models.IntegerField(null=True)
    bicycle_collision = models.IntegerField(null=True)
    motorcycle_collision = models.IntegerField(null=True)
    truck_collision = models.IntegerField(null=True)
    not_private_property = models.IntegerField(null=True)
    alcohol_involved = models.IntegerField(null=True)
    statewide_vehicle_type_at_fault = models.TextField(null=True)
    chp_vehicle_type_at_fault = models.TextField(null=True)
    severe_injury_count = models.IntegerField(null=True)
    other_visible_injury_count = models.IntegerField(null=True)
    complaint_of_pain_injury_count = models.IntegerField(null=True)
    pedestrian_killed_count = models.IntegerField(null=True)
    pedestrian_injured_count = models.IntegerField(null=True)
    bicyclist_killed_count = models.IntegerField(null=True)
    bicyclist_injured_count = models.IntegerField(null=True)
    motorcyclist_killed_count = models.IntegerField(null=True)
    motorcyclist_injured_count = models.IntegerField(null=True)
    primary_ramp = models.TextField(null=True)
    secondary_ramp = models.TextField(null=True)
    latitude = models.FloatField(null=True)
    longitude = models.FloatField(null=True)
    collision_date = models.TextField(null=True)
    collision_time = models.TextField(null=True)
    process_date = models.TextField(null=True)